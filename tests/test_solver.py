import unittest
from utils.solver import solve_minizinc_problem

class TestSolver(unittest.TestCase):
  def test_solve(self):
    test_cases = [
      {
        'n': 15,
        'population': [
          [4, 0, 1, 1, 2, 2, 0, 0, 4, 15, 15, 4, 11, 2, 1],
          [4, 0, 3, 1, 6, 2, 0, 0, 4, 15, 15, 4, 8, 2, 1],
          [4, 0, 3, 1, 6, 2, 0, 0, 4, 9, 9, 4, 2, 2, 2],
          [0, 0, 1, 1, 21, 23, 4, 4, 4, 16, 16, 4, 2, 2, 2],
          [0, 0, 1, 1, 20, 20, 0, 4, 4, 16, 16, 4, 4, 2, 2],
          [0, 0, 1, 1, 15, 18, 0, 4, 4, 5, 5, 4, 2, 8, 2],
          [0, 0, 1, 1, 2, 2, 4, 0, 4, 16, 16, 4, 2, 7, 1],
          [5, 7, 3, 1, 2, 2, 4, 4, 4, 16, 16, 4, 2, 2, 1],
          [5, 7, 3, 1, 2, 2, 2, 2, 4, 5, 5, 1, 2, 2, 2],
          [5, 7, 9, 1, 2, 2, 14, 14, 14, 16, 16, 4, 2, 2, 2],
          [0, 0, 1, 1, 2, 2, 34, 34, 34, 11, 20, 5, 6, 14, 2],
          [0, 0, 1, 1, 2, 25, 34, 34, 4, 16, 16, 4, 1, 2, 2],
          [0, 0, 4, 1, 2, 25, 34, 34, 4, 16, 16, 4, 2, 2, 2],
          [0, 0, 4, 1, 2, 25, 34, 34, 4, 16, 16, 4, 3, 3, 2],
          [0, 0, 1, 1, 2, 2, 4, 4, 4, 16, 16, 4, 2, 8, 8]
        ],
        'enterprise': [
          [0, 0, 1, 1, 2, 2, 4, 13, 4, 16, 16, 4, 2, 6, 2],
          [0, 0, 1, 1, 2, 2, 4, 13, 4, 16, 16, 4, 2, 6, 2],
          [0, 0, 1, 10, 2, 2, 4, 4, 4, 16, 16, 4, 2, 2, 2],
          [0, 0, 1, 1, 21, 23, 4, 4, 4, 16, 16, 4, 2, 2, 2],
          [0, 0, 1, 1, 20, 20, 4, 4, 4, 16, 16, 4, 4, 5, 2],
          [0, 0, 1, 1, 15, 18, 4, 4, 4, 16, 16, 4, 4, 5, 2],
          [0, 0, 1, 1, 2, 9, 4, 4, 4, 16, 16, 4, 2, 2, 2],
          [18, 18, 1, 1, 9, 2, 11, 4, 4, 16, 16, 4, 2, 2, 2],
          [35, 18, 1, 1, 2, 2, 12, 4, 4, 16, 16, 4, 6, 2, 2],
          [18, 18, 10, 1, 8, 2, 4, 4, 4, 16, 16, 4, 2, 2, 2],
          [0, 0, 1, 1, 2, 2, 4, 4, 4, 16, 16, 4, 2, 14, 2],
          [0, 0, 9, 1, 2, 25, 34, 50, 4, 16, 16, 4, 13, 2, 2],
          [0, 0, 9, 1, 2, 25, 44, 34, 4, 16, 16, 4, 2, 9, 2],
          [0, 0, 1, 1, 5, 25, 34, 34, 4, 16, 16, 4, 2, 9, 2],
          [0, 0, 1, 1, 5, 2, 4, 4, 4, 16, 16, 4, 2, 18, 18]
        ],
        'programs': 3,
        'positions': [[6, 8], [8, 4], [10, 10]],
        'new_programs': 4,
        'solver_name': "gecode",
        'expected': [[1, 1], [1, 1], [1, 1], [1, 1]]
      }
    ]
    
    for test_case in test_cases:
      result = solve_minizinc_problem(
        test_case['solver_name'],
        "./model.mzn",
        test_case['n'],
        test_case['population'],
        test_case['enterprise'],
        test_case['programs'],
        test_case['positions'],
        test_case['new_programs']
      )
      if not result:
        self.fail("No se encontró solución")
      new_positions = result["new_positions"]
      self.assertEqual(new_positions, test_case['expected'])

if __name__ == '__main__':
  unittest.main()
